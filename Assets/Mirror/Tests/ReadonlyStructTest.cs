using System;
using NUnit.Framework;

namespace Mirror.Tests
{
    public class ReadonlyStructTest
    {
        public readonly struct Point
        {
            public readonly int X;
            public readonly int Y;

            public Point(int x, int y)
            {
                X = x;
                Y = y;
            }
        }

        // ArraySegment<byte> is a special case,  optimized for no copy and no allocation
        // other types are generated by the weaver

        class PointMessage : MessageBase
        {
            public Point point;
        }

        [Test]
        public void TestReadOnlySerialization()
        {
            PointMessage message = new PointMessage
            {
                point = new Point(10, 20)
            };

            byte[] data = MessagePacker.Pack(message);

            PointMessage unpacked = MessagePacker.Unpack<PointMessage>(data);

            Assert.That(unpacked.point, Is.EqualTo(new Point(10,20)));
        }

    }
}
